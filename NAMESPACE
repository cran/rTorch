# Generated by roxygen2: do not edit by hand

S3method("!",torch.Tensor)
S3method("!=",torch.Tensor)
S3method("%%",torch.Tensor)
S3method("&",torch.Tensor)
S3method("*",torch.Tensor)
S3method("+",torch.Tensor)
S3method("-",torch.Tensor)
S3method("/",torch.Tensor)
S3method("<",torch.Tensor)
S3method("<=",torch.Tensor)
S3method("==",torch.Tensor)
S3method(">",torch.Tensor)
S3method(">=",torch.Tensor)
S3method("[",torch.Size)
S3method("[",torch.Tensor)
S3method("[[",torch.Size)
S3method("^",torch.Tensor)
S3method("|",torch.Tensor)
S3method(.DollarNames,torch.python.platform.flags._FlagValues)
S3method(abs,torch.Tensor)
S3method(acos,torch.Tensor)
S3method(all,torch.Tensor)
S3method(any,torch.Tensor)
S3method(asin,torch.Tensor)
S3method(atan,torch.Tensor)
S3method(cos,torch.Tensor)
S3method(dim,torch.Tensor)
S3method(exp,torch.Tensor)
S3method(floor,torch.Tensor)
S3method(length,torch.Tensor)
S3method(log,torch.Tensor)
S3method(log10,torch.Tensor)
S3method(log2,torch.Tensor)
S3method(print,pytorch_config)
S3method(print,torch.Tensor)
S3method(py_str,torch.python.ops.variables.Variable)
S3method(sign,torch.Tensor)
S3method(sin,torch.Tensor)
S3method(sqrt,torch.Tensor)
S3method(tan,torch.Tensor)
export("%**%")
export("%.*%")
export("%as%")
export(all_dims)
export(array_reshape)
export(as_boolean)
export(dataset_mnist_digits)
export(dict)
export(import)
export(import_builtins)
export(import_from_path)
export(install_pytorch)
export(is_tensor)
export(iter_next)
export(iterate)
export(make_copy)
export(np)
export(np_array)
export(py_eval)
export(py_get_item)
export(py_len)
export(py_run_string)
export(py_to_r)
export(r_to_py)
export(shape)
export(torch)
export(torch_config)
export(torch_extract_opts)
export(torch_size)
export(torch_version)
export(torchvision)
export(tuple)
export(use_condaenv)
export(use_python)
export(use_virtualenv)
import(reticulate)
importFrom(jsonlite,fromJSON)
importFrom(utils,.DollarNames)
importFrom(utils,str)
